"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3882],{5165:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"\u5f00\u6e90\u63a8\u8350/C++/OpenMP","title":"\u591a\u7ebf\u7a0b\u7f16\u7a0b\u65b0\u59ff\u52bf\uff1aOpenMP\u5e93\u7684\u6df1\u5ea6\u5e94\u7528\u6307\u5357","description":"\u8f6c\u5e16\u81ea AI\u8ba9\u751f\u6d3b\u66f4\u7f8e\u597d","source":"@site/docs/\u5f00\u6e90\u63a8\u8350/C++/OpenMP.md","sourceDirName":"\u5f00\u6e90\u63a8\u8350/C++","slug":"/\u5f00\u6e90\u63a8\u8350/C++/OpenMP","permalink":"/docs/\u5f00\u6e90\u63a8\u8350/C++/OpenMP","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u5f00\u6e90\u63a8\u8350/C++/OpenMP.md","tags":[],"version":"current","frontMatter":{},"sidebar":"opensource_recommendation","next":{"title":"Range-v3\uff0c\u91cd\u5851\u73b0\u4ee3C++\u7684\u6570\u636e\u5904\u7406\u65b9\u5f0f","permalink":"/docs/\u5f00\u6e90\u63a8\u8350/C++/Range-v3"}}');var l=e(4848),s=e(8453);const d={},a="\u591a\u7ebf\u7a0b\u7f16\u7a0b\u65b0\u59ff\u52bf\uff1aOpenMP\u5e93\u7684\u6df1\u5ea6\u5e94\u7528\u6307\u5357",c={},t=[{value:"<strong>\u4e00\u3001\u521d\u8bc6OpenMP</strong>",id:"\u4e00\u521d\u8bc6openmp",level:2},{value:"<strong>\u4e8c\u3001\u5b89\u88c5\u4e0e\u914d\u7f6e</strong>",id:"\u4e8c\u5b89\u88c5\u4e0e\u914d\u7f6e",level:2},{value:"<strong>\u4e09\u3001\u57fa\u672c\u8bed\u6cd5\u4e0e\u793a\u4f8b</strong>",id:"\u4e09\u57fa\u672c\u8bed\u6cd5\u4e0e\u793a\u4f8b",level:2},{value:"<strong>1. \u5e76\u884c\u533a</strong>",id:"1-\u5e76\u884c\u533a",level:4},{value:"<strong>2. \u5e76\u884cfor\u5faa\u73af</strong>",id:"2-\u5e76\u884cfor\u5faa\u73af",level:4},{value:"<strong>\u56db\u3001\u9ad8\u7ea7\u7528\u6cd5\u4e0e\u4f18\u5316</strong>",id:"\u56db\u9ad8\u7ea7\u7528\u6cd5\u4e0e\u4f18\u5316",level:2},{value:"<strong>1. \u7ebf\u7a0b\u6570\u63a7\u5236</strong>",id:"1-\u7ebf\u7a0b\u6570\u63a7\u5236",level:3},{value:"<strong>2. \u4efb\u52a1\u8c03\u5ea6\u7b56\u7565</strong>",id:"2-\u4efb\u52a1\u8c03\u5ea6\u7b56\u7565",level:3},{value:"<strong>3. \u4e34\u754c\u533a\u4e0e\u539f\u5b50\u64cd\u4f5c</strong>",id:"3-\u4e34\u754c\u533a\u4e0e\u539f\u5b50\u64cd\u4f5c",level:4},{value:"<strong>\u4e94\u3001\u5b9e\u6218\u5e94\u7528</strong>",id:"\u4e94\u5b9e\u6218\u5e94\u7528",level:2},{value:"<strong>\u516d\u3001\u7ed3\u8bed</strong>",id:"\u516d\u7ed3\u8bed",level:2},{value:"\u4e03\u3001\u8865\u5145",id:"\u4e03\u8865\u5145",level:2},{value:"7.1 \u7ebf\u7a0b\u79c1\u6709\u6570\u636e\u4e0e\u5171\u4eab\u6570\u636e",id:"71-\u7ebf\u7a0b\u79c1\u6709\u6570\u636e\u4e0e\u5171\u4eab\u6570\u636e",level:3},{value:"\u7ebf\u7a0b\u79c1\u6709\u6570\u636e",id:"\u7ebf\u7a0b\u79c1\u6709\u6570\u636e",level:4},{value:"\u5171\u4eab\u6570\u636e",id:"\u5171\u4eab\u6570\u636e",level:4},{value:"7.2 \u6027\u80fd\u8c03\u4f18\u4e0e\u5e38\u89c1\u95ee\u9898",id:"72-\u6027\u80fd\u8c03\u4f18\u4e0e\u5e38\u89c1\u95ee\u9898",level:3},{value:"\u8d1f\u8f7d\u5747\u8861",id:"\u8d1f\u8f7d\u5747\u8861",level:4},{value:"False Sharing",id:"false-sharing",level:4},{value:"7.3 \u8c03\u8bd5\u4e0e\u6027\u80fd\u5206\u6790",id:"73-\u8c03\u8bd5\u4e0e\u6027\u80fd\u5206\u6790",level:3},{value:"OpenMP\u73af\u5883\u53d8\u91cf",id:"openmp\u73af\u5883\u53d8\u91cf",level:4},{value:"Profiling\u5de5\u5177",id:"profiling\u5de5\u5177",level:4}];function o(n){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.header,{children:(0,l.jsx)(r.h1,{id:"\u591a\u7ebf\u7a0b\u7f16\u7a0b\u65b0\u59ff\u52bfopenmp\u5e93\u7684\u6df1\u5ea6\u5e94\u7528\u6307\u5357",children:"\u591a\u7ebf\u7a0b\u7f16\u7a0b\u65b0\u59ff\u52bf\uff1aOpenMP\u5e93\u7684\u6df1\u5ea6\u5e94\u7528\u6307\u5357"})}),"\n",(0,l.jsxs)(r.blockquote,{children:["\n",(0,l.jsx)(r.p,{children:"\u8f6c\u5e16\u81ea AI\u8ba9\u751f\u6d3b\u66f4\u7f8e\u597d"}),"\n"]}),"\n",(0,l.jsx)(r.p,{children:"\u591a\u7ebf\u7a0b\u7f16\u7a0b\u5df2\u6210\u4e3a\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u7684\u5173\u952e\u6280\u672f\u3002C++\u4f5c\u4e3a\u4e00\u95e8\u5f3a\u5927\u7684\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\uff0c\u81ea\u7136\u4e5f\u6709\u5176\u72ec\u7279\u7684\u591a\u7ebf\u7a0b\u7f16\u7a0b\u89e3\u51b3\u65b9\u6848\u3002\u5176\u4e2d\uff0cOpenMP\uff08Open Multi-Processing\uff09\u5e93\u4ee5\u5176\u7b80\u6d01\u6613\u7528\u548c\u9ad8\u6548\u6027\uff0c\u6210\u4e3a\u4f17\u591a\u5f00\u53d1\u8005\u7684\u9996\u9009\u3002"}),"\n",(0,l.jsx)(r.h2,{id:"\u4e00\u521d\u8bc6openmp",children:(0,l.jsx)(r.strong,{children:"\u4e00\u3001\u521d\u8bc6OpenMP"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:"OpenMP\u662f\u4e00\u7ec4\u7f16\u8bd1\u5668\u6307\u793a\u3001\u5e93\u51fd\u6570\u548c\u73af\u5883\u53d8\u91cf\u7684\u96c6\u5408\uff0c\u65e8\u5728\u4e3a\u5171\u4eab\u5185\u5b58\u591a\u5904\u7406\u5668\u7f16\u7a0b\u63d0\u4f9b\u7b80\u5355\u800c\u7075\u6d3b\u7684\u63a5\u53e3\u3002\u5b83\u652f\u6301C\u3001C++\u548cFortran\uff0c\u5e76\u4e14\u88ab\u8bb8\u591a\u4e3b\u6d41\u7f16\u8bd1\u5668\uff08\u5982GCC\u3001Clang\u548cIntel C++\u7f16\u8bd1\u5668\uff09\u5e7f\u6cdb\u652f\u6301\u3002"}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:"OpenMP\u7684\u6838\u5fc3\u601d\u60f3\u662f\u901a\u8fc7\u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u7279\u5b9a\u7684\u7f16\u8bd1\u6307\u793a\uff08pragma\uff09\uff0c\u5c06\u7a0b\u5e8f\u7684\u90e8\u5206\u4ee3\u7801\u5757\u5e76\u884c\u5316\uff0c\u4ece\u800c\u63d0\u9ad8\u7a0b\u5e8f\u6267\u884c\u6548\u7387\u3002\u4e0b\u9762\u6211\u4eec\u5c06\u901a\u8fc7\u51e0\u4e2a\u793a\u4f8b\uff0c\u9010\u6b65\u63ed\u793aOpenMP\u7684\u5f3a\u5927\u529f\u80fd\u3002"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"\u4e8c\u5b89\u88c5\u4e0e\u914d\u7f6e",children:(0,l.jsx)(r.strong,{children:"\u4e8c\u3001\u5b89\u88c5\u4e0e\u914d\u7f6e"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"\u5728\u5f00\u59cb\u4f7f\u7528OpenMP\u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u786e\u4fdd\u4f60\u7684\u7f16\u8bd1\u5668\u652f\u6301OpenMP\u3002\u5927\u591a\u6570\u73b0\u4ee3C++\u7f16\u8bd1\u5668\u9ed8\u8ba4\u90fd\u652f\u6301OpenMP\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5GCC\u7f16\u8bd1\u5668\u662f\u5426\u652f\u6301OpenMP\uff1a"}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{children:"gcc -fopenmp -o example example.cpp\n"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"\u5982\u679c\u6ca1\u6709\u62a5\u9519\uff0c\u90a3\u4e48\u4f60\u7684\u7f16\u8bd1\u5668\u5df2\u7ecf\u51c6\u5907\u597d\u4f7f\u7528OpenMP\u4e86\u3002"}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"\u4e09\u57fa\u672c\u8bed\u6cd5\u4e0e\u793a\u4f8b",children:(0,l.jsx)(r.strong,{children:"\u4e09\u3001\u57fa\u672c\u8bed\u6cd5\u4e0e\u793a\u4f8b"})}),"\n",(0,l.jsx)(r.h4,{id:"1-\u5e76\u884c\u533a",children:(0,l.jsx)(r.strong,{children:"1. \u5e76\u884c\u533a"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\u6700\u57fa\u672c\u7684OpenMP\u6307\u793a\u7b26\u662f ",(0,l.jsx)(r.code,{children:"#pragma omp parallel"}),"\uff0c\u5b83\u7528\u4e8e\u5c06\u4ee3\u7801\u5757\u5e76\u884c\u5316\u6267\u884c\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a"]}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:'#include <omp.h>\r\n#include <iostream>\r\n\r\nint main() {  \r\n    \r\n    #pragma omp parallel    \r\n    {        \r\n        int thread_id = omp_get_thread_num();        \r\n        std::cout << "Hello from thread " << thread_id << std::endl;    \r\n    }    \r\n    return 0;\r\n}\n'})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u6267\u884c\u5e76\u8f93\u51fa\u5176\u7ebf\u7a0bID\u3002"}),"\n"]}),"\n",(0,l.jsx)(r.h4,{id:"2-\u5e76\u884cfor\u5faa\u73af",children:(0,l.jsx)(r.strong,{children:"2. \u5e76\u884cfor\u5faa\u73af"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["OpenMP\u6700\u5e38\u7528\u7684\u529f\u80fd\u4e4b\u4e00\u662f\u5e76\u884c\u5316for\u5faa\u73af\u3002\u4f7f\u7528 ",(0,l.jsx)(r.code,{children:"#pragma omp parallel for"})," \u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a"]}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:'#include <omp.h>\r\n#include <iostream>\r\n\r\nint main() {    \r\n    const int size = 10;    \r\n    int array[size];\r\n    \r\n    // Initialize array    \r\n    for(int i = 0; i < size; ++i) {        \r\n        array[i] = i;    \r\n    }\r\n    \r\n    // Parallelize this loop    \r\n    #pragma omp parallel for    \r\n    for(int i = 0; i < size; ++i) {        \r\n        array[i] = array[i] * array[i];    \r\n    }\r\n    \r\n    // Print the results    \r\n    for(int i = 0; i < size; ++i) {        \r\n        std::cout << array[i] << " ";    \r\n    }    \r\n    std::cout << std::endl;\r\n    \r\n    return 0;\r\n}\n'})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"\u6b64\u793a\u4f8b\u5c06\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u5e73\u65b9\uff0c\u5e76\u884c\u5316for\u5faa\u73af\u4f7f\u5f97\u8ba1\u7b97\u6548\u7387\u5927\u5927\u63d0\u9ad8\u3002"}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"\u56db\u9ad8\u7ea7\u7528\u6cd5\u4e0e\u4f18\u5316",children:(0,l.jsx)(r.strong,{children:"\u56db\u3001\u9ad8\u7ea7\u7528\u6cd5\u4e0e\u4f18\u5316"})}),"\n",(0,l.jsx)(r.h3,{id:"1-\u7ebf\u7a0b\u6570\u63a7\u5236",children:(0,l.jsx)(r.strong,{children:"1. \u7ebf\u7a0b\u6570\u63a7\u5236"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\u4f60\u53ef\u4ee5\u901a\u8fc7 ",(0,l.jsx)(r.code,{children:"omp_set_num_threads"})," \u51fd\u6570\u6216\u8005\u5728\u7f16\u8bd1\u6307\u793a\u4e2d\u6307\u5b9a\u7ebf\u7a0b\u6570\uff1a"]}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:"#pragma omp parallel for num_threads(4)\r\nfor(int i = 0; i < size; ++i) {    \r\n    array[i] = array[i] * array[i];\r\n}\n"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u7cbe\u7ec6\u63a7\u5236\u7ebf\u7a0b\u7684\u4f7f\u7528\uff0c\u907f\u514d\u8d44\u6e90\u8fc7\u5ea6\u6d88\u8017\u3002"}),"\n"]}),"\n",(0,l.jsx)(r.h3,{id:"2-\u4efb\u52a1\u8c03\u5ea6\u7b56\u7565",children:(0,l.jsx)(r.strong,{children:"2. \u4efb\u52a1\u8c03\u5ea6\u7b56\u7565"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["OpenMP\u63d0\u4f9b\u4e86\u591a\u79cd\u8c03\u5ea6\u7b56\u7565\uff0c\u7528\u4e8e\u5206\u914d\u4efb\u52a1\u7ed9\u4e0d\u540c\u7684\u7ebf\u7a0b\u3002\u5e38\u89c1\u7684\u6709 ",(0,l.jsx)(r.code,{children:"static"}),"\u3001",(0,l.jsx)(r.code,{children:"dynamic"})," \u548c ",(0,l.jsx)(r.code,{children:"guided"})," \u7b49\uff1a"]}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:"#pragma omp parallel for schedule(static, 2)\r\nfor(int i = 0; i < size; ++i) {    \r\n    array[i] = array[i] * array[i];\r\n}\n"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c",(0,l.jsx)(r.code,{children:"static, 2"})," \u6307\u5b9a\u4e86\u9759\u6001\u8c03\u5ea6\u7b56\u7565\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5904\u74062\u4e2a\u8fde\u7eed\u7684\u8fed\u4ee3\u3002\u8fd9\u79cd\u7b56\u7565\u9002\u7528\u4e8e\u8d1f\u8f7d\u5747\u8861\u7684\u4efb\u52a1\u3002"]}),"\n"]}),"\n",(0,l.jsx)(r.h4,{id:"3-\u4e34\u754c\u533a\u4e0e\u539f\u5b50\u64cd\u4f5c",children:(0,l.jsx)(r.strong,{children:"3. \u4e34\u754c\u533a\u4e0e\u539f\u5b50\u64cd\u4f5c"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\u5728\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\uff0c\u6570\u636e\u7ade\u4e89\u662f\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\u3002OpenMP\u63d0\u4f9b\u4e86 ",(0,l.jsx)(r.code,{children:"critical"})," \u548c ",(0,l.jsx)(r.code,{children:"atomic"})," \u6307\u793a\u7b26\uff0c\u7528\u4e8e\u4fdd\u62a4\u5171\u4eab\u8d44\u6e90\uff1a"]}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:'#include <omp.h>\r\n#include <iostream>\r\n\r\nint main() {    \r\n    int sum = 0;\r\n    \r\n    #pragma omp parallel for    \r\n    for(int i = 0; i < 100; ++i) {        \r\n        #pragma omp critical        \r\n        sum += i;    \r\n    }\r\n    \r\n    std::cout << "Sum: " << sum << std::endl;\r\n    return 0;\r\n}\n'})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c ",(0,l.jsx)(r.code,{children:"#pragma omp critical"})," \u786e\u4fdd\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6267\u884c ",(0,l.jsx)(r.code,{children:"sum += i"})," \u64cd\u4f5c\uff0c\u4ece\u800c\u907f\u514d\u6570\u636e\u7ade\u4e89\u3002"]}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"\u4e94\u5b9e\u6218\u5e94\u7528",children:(0,l.jsx)(r.strong,{children:"\u4e94\u3001\u5b9e\u6218\u5e94\u7528"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3OpenMP\u7684\u5b9e\u9645\u5e94\u7528\u573a\u666f\uff0c\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e2a\u77e9\u9635\u4e58\u6cd5\u7684\u4f8b\u5b50\u3002\u8fd9\u662f\u4e00\u4e2a\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u975e\u5e38\u9002\u5408\u4f7f\u7528OpenMP\u8fdb\u884c\u5e76\u884c\u5316\u5904\u7406\u3002"}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:'#include <omp.h>\r\n#include <iostream>\r\n#include <vector>\r\n\r\nint main() {    \r\n    const int N = 1000;    \r\n    std::vector<std::vector<int>> A(N, std::vector<int>(N, 1));    \r\n    std::vector<std::vector<int>> B(N, std::vector<int>(N, 2));    \r\n    std::vector<std::vector<int>> C(N, std::vector<int>(N, 0));\r\n    \r\n    #pragma omp parallel for collapse(2)    \r\n    for (int i = 0; i < N; ++i) {        \r\n        for (int j = 0; j < N; ++j) {            \r\n            for (int k = 0; k < N; ++k) {                \r\n                C[i][j] += A[i][k] * B[k][j];            \r\n            }        \r\n        }    \r\n    }\r\n    \r\n    std::cout << "Matrix multiplication completed." << std::endl;\r\n    return 0;\r\n}\n'})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 ",(0,l.jsx)(r.code,{children:"#pragma omp parallel for collapse(2)"})," \u5c06\u4e24\u4e2a\u5d4c\u5957\u7684for\u5faa\u73af\u5e76\u884c\u5316\u3002",(0,l.jsx)(r.code,{children:"collapse(2)"})," \u6307\u793a\u7b26\u544a\u8bc9OpenMP\u5c06\u5916\u5c42\u4e24\u4e2a\u5faa\u73af\u4e00\u8d77\u5e76\u884c\u5316\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u597d\u5730\u5229\u7528\u591a\u7ebf\u7a0b\u7684\u4f18\u52bf\u3002"]}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"\u516d\u7ed3\u8bed",children:(0,l.jsx)(r.strong,{children:"\u516d\u3001\u7ed3\u8bed"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"OpenMP\u4e3aC++\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u5f3a\u5927\u800c\u7075\u6d3b\u7684\u591a\u7ebf\u7a0b\u7f16\u7a0b\u80fd\u529b\u3002\u901a\u8fc7\u7b80\u5355\u7684\u7f16\u8bd1\u6307\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u663e\u8457\u63d0\u5347\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\uff0c\u5145\u5206\u5229\u7528\u591a\u6838\u5904\u7406\u5668\u7684\u8ba1\u7b97\u80fd\u529b\u3002\u65e0\u8bba\u662f\u57fa\u672c\u7684\u5e76\u884c\u533a\u3001\u5e76\u884cfor\u5faa\u73af\uff0c\u8fd8\u662f\u9ad8\u7ea7\u7684\u7ebf\u7a0b\u6570\u63a7\u5236\u548c\u4efb\u52a1\u8c03\u5ea6\u7b56\u7565\uff0cOpenMP\u90fd\u80fd\u8f7b\u677e\u80dc\u4efb\u3002"}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"\u4e03\u8865\u5145",children:"\u4e03\u3001\u8865\u5145"}),"\n",(0,l.jsx)(r.h3,{id:"71-\u7ebf\u7a0b\u79c1\u6709\u6570\u636e\u4e0e\u5171\u4eab\u6570\u636e",children:"7.1 \u7ebf\u7a0b\u79c1\u6709\u6570\u636e\u4e0e\u5171\u4eab\u6570\u636e"}),"\n",(0,l.jsx)(r.h4,{id:"\u7ebf\u7a0b\u79c1\u6709\u6570\u636e",children:"\u7ebf\u7a0b\u79c1\u6709\u6570\u636e"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsxs)(r.p,{children:["\u7ebf\u7a0b\u79c1\u6709\u6570\u636e\u662f\u6307\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u526f\u672c\u7684\u53d8\u91cf\u3002\u5728OpenMP\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528",(0,l.jsx)(r.code,{children:"private"}),"\u5b50\u53e5\u6765\u58f0\u660e\u7ebf\u7a0b\u79c1\u6709\u53d8\u91cf\u3002"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:'#include <omp.h>\r\n#include <iostream>\r\n\r\nint main() {\r\n    int shared_var = 0;\r\n    \r\n    #pragma omp parallel private(shared_var)\r\n    {\r\n        shared_var = omp_get_thread_num();\r\n        printf("Thread %d: shared_var = %d\\n", omp_get_thread_num(), shared_var);\r\n    }\r\n    \r\n    printf("After parallel region: shared_var = %d\\n", shared_var);\r\n    \r\n    return 0;\r\n}\n'})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsxs)(r.p,{children:["\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c3d\u7ba1",(0,l.jsx)(r.code,{children:"shared_var"}),"\u5728\u5e76\u884c\u533a\u57df\u5916\u662f\u5171\u4eab\u7684\uff0c\u4f46\u5728\u5e76\u884c\u533a\u57df\u5185\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u526f\u672c\u3002"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(r.h4,{id:"\u5171\u4eab\u6570\u636e",children:"\u5171\u4eab\u6570\u636e"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"\u5171\u4eab\u6570\u636e\u662f\u6240\u6709\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u8bbf\u95ee\u7684\u6570\u636e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5e76\u884c\u533a\u57df\u4e2d\u7684\u5927\u591a\u6570\u53d8\u91cf\u90fd\u662f\u5171\u4eab\u7684\uff0c\u9664\u975e\u53e6\u6709\u58f0\u660e\u3002"}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:'#include <omp.h>\r\n#include <iostream>\r\n\r\nint main() {\r\n    int sum = 0;\r\n    \r\n    #pragma omp parallel shared(sum)\r\n    {\r\n        #pragma omp critical\r\n        {\r\n            sum += omp_get_thread_num();\r\n        }\r\n    }\r\n    \r\n    printf("Sum of thread numbers: %d\\n", sum);\r\n    \r\n    return 0;\r\n}\n'})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c",(0,l.jsx)(r.code,{children:"sum"}),"\u662f\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf\uff0c\u6240\u6709\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u8bbf\u95ee\u548c\u4fee\u6539\u5b83\u3002\u6211\u4eec\u4f7f\u7528",(0,l.jsx)(r.code,{children:"critical"}),"\u6307\u4ee4\u6765\u786e\u4fdd\u4e00\u6b21\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u66f4\u65b0",(0,l.jsx)(r.code,{children:"sum"}),"\u3002"]}),"\n"]}),"\n",(0,l.jsx)(r.h3,{id:"72-\u6027\u80fd\u8c03\u4f18\u4e0e\u5e38\u89c1\u95ee\u9898",children:"7.2 \u6027\u80fd\u8c03\u4f18\u4e0e\u5e38\u89c1\u95ee\u9898"}),"\n",(0,l.jsx)(r.h4,{id:"\u8d1f\u8f7d\u5747\u8861",children:"\u8d1f\u8f7d\u5747\u8861"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:"\u8d1f\u8f7d\u5747\u8861\u662f\u786e\u4fdd\u6240\u6709\u7ebf\u7a0b\u90fd\u6709\u5927\u81f4\u76f8\u540c\u7684\u5de5\u4f5c\u91cf\u3002OpenMP\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u8c03\u5ea6\u7b56\u7565\u6765\u5e2e\u52a9\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u3002"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:"#include <omp.h>\r\n#include <iostream>\r\n#include <vector>\r\n\r\nvoid expensive_operation(int i) {\r\n    // Simulate an operation that takes longer for larger i\r\n    for (int j = 0; j < i * 1000; ++j) {\r\n        // Do something\r\n    }\r\n}\r\n\r\nint main() {\r\n    std::vector<int> data(1000);\r\n    for (int i = 0; i < 1000; ++i) {\r\n        data[i] = i;\r\n    }\r\n    \r\n    // Using dynamic scheduling for better load balancing\r\n    #pragma omp parallel for schedule(dynamic, 10)\r\n    for (int i = 0; i < data.size(); ++i) {\r\n        expensive_operation(data[i]);\r\n    }\r\n    \r\n    return 0;\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsxs)(r.p,{children:["\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528",(0,l.jsx)(r.code,{children:"dynamic"}),"\u8c03\u5ea6\u7b56\u7565\uff0c\u6bcf\u6b21\u5206\u914d10\u4e2a\u8fed\u4ee3\u7ed9\u7a7a\u95f2\u7684\u7ebf\u7a0b\u3002\u8fd9\u6709\u52a9\u4e8e\u5904\u7406\u5de5\u4f5c\u8d1f\u8f7d\u4e0d\u5747\u5300\u7684\u60c5\u51b5\u3002"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(r.h4,{id:"false-sharing",children:"False Sharing"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:"False sharing\u662f\u4e00\u79cd\u6027\u80fd\u95ee\u9898\uff0c\u53d1\u751f\u5728\u4e0d\u540c\u7ebf\u7a0b\u9891\u7e41\u5199\u5165\u540c\u4e00\u7f13\u5b58\u884c\u7684\u4e0d\u540c\u53d8\u91cf\u65f6\u3002"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:'#include <omp.h>\r\n#include <iostream>\r\n#include <vector>\r\n\r\nstruct alignas(64) PaddedInt {\r\n    int value;\r\n    char padding[60]; // Assuming 64-byte cache line\r\n};\r\n\r\nint main() {\r\n    const int N = 100000000;\r\n    std::vector<PaddedInt> counters(omp_get_max_threads());\r\n    \r\n    #pragma omp parallel for\r\n    for (int i = 0; i < N; ++i) {\r\n        counters[omp_get_thread_num()].value++;\r\n    }\r\n    \r\n    int total = 0;\r\n    for (const auto& counter : counters) {\r\n        total += counter.value;\r\n    }\r\n    \r\n    std::cout << "Total: " << total << std::endl;\r\n    \r\n    return 0;\r\n}\n'})}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:"\u8fd9\u4e2a\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u586b\u5145\u6765\u907f\u514dfalse sharing\u3002\u6211\u4eec\u786e\u4fdd\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u8ba1\u6570\u5668\u4f4d\u4e8e\u4e0d\u540c\u7684\u7f13\u5b58\u884c\u4e0a\u3002"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(r.h3,{id:"73-\u8c03\u8bd5\u4e0e\u6027\u80fd\u5206\u6790",children:"7.3 \u8c03\u8bd5\u4e0e\u6027\u80fd\u5206\u6790"}),"\n",(0,l.jsx)(r.h4,{id:"openmp\u73af\u5883\u53d8\u91cf",children:"OpenMP\u73af\u5883\u53d8\u91cf"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"OpenMP\u63d0\u4f9b\u4e86\u591a\u4e2a\u73af\u5883\u53d8\u91cf\u6765\u63a7\u5236\u7a0b\u5e8f\u7684\u884c\u4e3a\u548c\u5e2e\u52a9\u8c03\u8bd5\u3002"}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:'#include <omp.h>\r\n#include <iostream>\r\n\r\nint main() {\r\n    #pragma omp parallel\r\n    {\r\n        #pragma omp single\r\n        {\r\n            std::cout << "Number of threads: " << omp_get_num_threads() << std::endl;\r\n        }\r\n        \r\n        #pragma omp critical\r\n        {\r\n            std::cout << "Thread " << omp_get_thread_num() << " is running" << std::endl;\r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}\n'})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u6765\u63a7\u5236\u7ebf\u7a0b\u6570\uff1a"}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-bash",children:"export OMP_NUM_THREADS=4\r\n./your_program\n"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\u5176\u4ed6\u6709\u7528\u7684\u73af\u5883\u53d8\u91cf\u5305\u62ec",(0,l.jsx)(r.code,{children:"OMP_SCHEDULE"}),"\uff08\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u8c03\u5ea6\u7b56\u7565\uff09\u548c",(0,l.jsx)(r.code,{children:"OMP_DYNAMIC"}),"\uff08\u5141\u8bb8\u8fd0\u884c\u65f6\u8c03\u6574\u7ebf\u7a0b\u6570\uff09\u3002"]}),"\n"]}),"\n",(0,l.jsx)(r.h4,{id:"profiling\u5de5\u5177",children:"Profiling\u5de5\u5177"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\u4f7f\u7528\u6027\u80fd\u5206\u6790\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u8bc6\u522b\u7a0b\u5e8f\u7684\u74f6\u9888\u3002\u4ee5\u4e0b\u662f\u4f7f\u7528Linux\u7684",(0,l.jsx)(r.code,{children:"perf"}),"\u5de5\u5177\u7684\u793a\u4f8b\uff1a"]}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-cpp",children:"#include <omp.h>\r\n#include <iostream>\r\n#include <vector>\r\n\r\nvoid compute_intensive_task(std::vector<double>& data) {\r\n    #pragma omp parallel for\r\n    for (int i = 0; i < data.size(); ++i) {\r\n        for (int j = 0; j < 1000; ++j) {\r\n            data[i] = std::sin(data[i]) * std::cos(data[i]);\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    std::vector<double> data(1000000, 1.0);\r\n    compute_intensive_task(data);\r\n    return 0;\r\n}\n"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"\u7f16\u8bd1\u5e76\u8fd0\u884c\u6027\u80fd\u5206\u6790\uff1a"}),"\n"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-bash",children:"g++ -fopenmp -O2 -g program.cpp -o program\r\nperf record ./program\r\nperf report\n"})}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:"\u8fd9\u5c06\u751f\u6210\u4e00\u4e2a\u6027\u80fd\u62a5\u544a\uff0c\u663e\u793a\u7a0b\u5e8f\u4e2d\u6700\u8017\u65f6\u7684\u90e8\u5206\u3002"}),"\n"]})]})}function h(n={}){const{wrapper:r}={...(0,s.R)(),...n.components};return r?(0,l.jsx)(r,{...n,children:(0,l.jsx)(o,{...n})}):o(n)}},8453:(n,r,e)=>{e.d(r,{R:()=>d,x:()=>a});var i=e(6540);const l={},s=i.createContext(l);function d(n){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function a(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:d(n.components),i.createElement(s.Provider,{value:r},n.children)}}}]);