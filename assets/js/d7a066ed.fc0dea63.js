"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6268],{7100:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"\u5e38\u89c1\u95ee\u9898/Windows/\u6dfb\u52a0\u6587\u4ef6\u5939\u5230\u6211\u7684\u7535\u8111","title":"\u6dfb\u52a0\u6587\u4ef6\u5939\u5230\u6211\u7684\u7535\u8111","description":"Talk is cheap. Let me show you my code.","source":"@site/docs/\u5e38\u89c1\u95ee\u9898/Windows/\u6dfb\u52a0\u6587\u4ef6\u5939\u5230\u6211\u7684\u7535\u8111.md","sourceDirName":"\u5e38\u89c1\u95ee\u9898/Windows","slug":"/\u5e38\u89c1\u95ee\u9898/Windows/\u6dfb\u52a0\u6587\u4ef6\u5939\u5230\u6211\u7684\u7535\u8111","permalink":"/docs/\u5e38\u89c1\u95ee\u9898/Windows/\u6dfb\u52a0\u6587\u4ef6\u5939\u5230\u6211\u7684\u7535\u8111","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u5e38\u89c1\u95ee\u9898/Windows/\u6dfb\u52a0\u6587\u4ef6\u5939\u5230\u6211\u7684\u7535\u8111.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frequently_question","previous":{"title":"\u5728Windows\u7cfb\u7edf\u4e2d\u8ba1\u7b97\u6587\u4ef6\u7684\u54c8\u5e0c\u503c","permalink":"/docs/\u5e38\u89c1\u95ee\u9898/Windows/\u5728Windows\u7cfb\u7edf\u4e2d\u8ba1\u7b97\u6587\u4ef6\u7684\u54c8\u5e0c\u503c"},"next":{"title":"\u7528 BGP \u4e91\u670d\u52a1\u5668\u201c\u4e2d\u8f6c\u201d\uff0c\u52a0\u901f\u8de8\u7f51\u7edc\u8bbf\u95ee","permalink":"/docs/\u5e38\u89c1\u95ee\u9898/Windows/\u7528 BGP \u4e91\u670d\u52a1\u5668\u201c\u4e2d\u8f6c\u201d\uff0c\u52a0\u901f\u8de8\u7f51\u7edc\u8bbf\u95ee"}}');var t=n(4848),s=n(8453);const o={},a=void 0,d={},p=[];function l(r){const e={blockquote:"blockquote",code:"code",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...r.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Talk is cheap. Let me show you my code."})}),"\n"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:'\u5982\u4e0b\u56fe\uff0c\u5c06\u67d0\u4e2a\u6587\u4ef6\u5939\u6dfb\u52a0\u5230"\u6211\u7684\u7535\u8111"\u4e2d\uff0c\u4fbf\u4e8e\u5feb\u901f\u8df3\u8f6c'}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:"https://nas.znmlr.cn:15900/markdown/2025/03/07/image-20250307142420548.png",alt:"image-20250307142420548"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u4e0b\u9762\u662fpython\u811a\u672c\uff0c\u6709\u8be6\u7ec6\u6ce8\u91ca\u548c\u4f7f\u7528\u5e2e\u52a9"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'import winreg\r\nimport uuid\r\nimport argparse\r\nimport sys\r\nimport winreg\r\nimport subprocess\r\n\r\n# \u6ce8\u518c\u8868\u8def\u5f84\r\nNAMESPACE_PATH = r"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace"\r\nCLSID_PATH = r"SOFTWARE\\Classes\\CLSID"\r\n\r\ndef add_folder(name, path, icon_index):\r\n    """\u6dfb\u52a0\u81ea\u5b9a\u4e49\u6587\u4ef6\u5939\u5230 \'\u6b64\u7535\u8111\'\uff0c\u5e76\u8bbe\u7f6e\u6307\u5b9a\u56fe\u6807"""\r\n    guid = str(uuid.uuid4()).upper()  # \u751f\u6210\u552f\u4e00 GUID\r\n\r\n    try:\r\n        # \u5728 "This PC" \u4e2d\u521b\u5efa\u547d\u540d\u7a7a\u95f4\r\n        with winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, f"{NAMESPACE_PATH}\\\\{{{guid}}}") as key:\r\n            pass\r\n\r\n        # \u5728 CLSID \u4e0b\u521b\u5efa GUID \u4fe1\u606f\r\n        with winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, f"{CLSID_PATH}\\\\{{{guid}}}") as key:\r\n            winreg.SetValueEx(key, None, 0, winreg.REG_SZ, name)\r\n            winreg.SetValueEx(key, "System.IsPinnedToNameSpaceTree", 0, winreg.REG_DWORD, 1)\r\n            winreg.SetValueEx(key, "DescriptionID", 0, winreg.REG_DWORD, 3)\r\n\r\n        # \u7ed1\u5b9a InProcServer32 \u4ee5\u786e\u4fdd Windows Explorer \u6b63\u786e\u8bc6\u522b\r\n        with winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, f"{CLSID_PATH}\\\\{{{guid}}}\\\\InProcServer32") as key:\r\n            winreg.SetValueEx(key, None, 0, winreg.REG_SZ, r"%SystemRoot%\\System32\\shell32.dll")\r\n            winreg.SetValueEx(key, "ThreadingModel", 0, winreg.REG_SZ, "Both")\r\n\r\n        # \u7ed1\u5b9a\u5230 Explorer \u7684 Folder \u7c7b\u578b\r\n        with winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, f"{CLSID_PATH}\\\\{{{guid}}}\\\\Instance") as key:\r\n            winreg.SetValueEx(key, "CLSID", 0, winreg.REG_SZ, "{0E5AAE11-A475-4c5b-AB00-C66DE400274E}")\r\n\r\n        # \u8ba9 Windows \u8bc6\u522b\u8be5\u6587\u4ef6\u5939\u7684\u76ee\u6807\u8def\u5f84\r\n        with winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, f"{CLSID_PATH}\\\\{{{guid}}}\\\\Instance\\\\InitPropertyBag") as key:\r\n            winreg.SetValueEx(key, "TargetFolderPath", 0, winreg.REG_SZ, path)\r\n            winreg.SetValueEx(key, "Attributes", 0, winreg.REG_DWORD, 0x11)  # \u786e\u4fdd\u5b83\u662f\u4e00\u4e2a\u6709\u6548\u7684\u6587\u4ef6\u5939\r\n\r\n        # \u786e\u4fdd Windows \u8bc6\u522b\u5b83\u4e3a **\u6587\u4ef6\u5939**\uff0c\u800c\u4e0d\u662f\u9a71\u52a8\u5668\r\n        with winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, f"{CLSID_PATH}\\\\{{{guid}}}\\\\ShellFolder") as key:\r\n            winreg.SetValueEx(key, "Attributes", 0, winreg.REG_DWORD, 0xf080004d)  # \u91cd\u8981: \u786e\u4fdd\u5b83\u662f\u6587\u4ef6\u5939\r\n            winreg.SetValueEx(key, "FolderValueFlags", 0, winreg.REG_DWORD, 0x29)  # \u8ba9 Windows Explorer \u8bc6\u522b\u4e3a\u6587\u4ef6\u5939\r\n\r\n        # \u6dfb\u52a0\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u5939\u56fe\u6807\r\n        icon_path = f"%SystemRoot%\\\\System32\\\\imageres.dll,-{icon_index}"\r\n        with winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, f"{CLSID_PATH}\\\\{{{guid}}}\\\\DefaultIcon") as key:\r\n            winreg.SetValueEx(key, None, 0, winreg.REG_SZ, icon_path)\r\n\r\n        print(f"\u2705 Successfully added \'{name}\' (Path: {path}) to \'This PC\'.")\r\n        print(f"\ud83d\udccc GUID: {guid}")\r\n        print(f"\ud83c\udfa8 Icon set to: {icon_path}")\r\n\r\n    except PermissionError:\r\n        print("\u274c Error: This script requires administrator privileges.")\r\n        print("\ud83d\udd39 Try running the script as an administrator.")\r\n    except Exception as e:\r\n        print(f"\u274c An unexpected error occurred: {e}")\r\n\r\ndef list_folders():\r\n    """\u5217\u51fa \'\u6b64\u7535\u8111\' \u91cc\u7684\u81ea\u5b9a\u4e49\u6587\u4ef6\u5939"""\r\n    try:\r\n        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, NAMESPACE_PATH) as key:\r\n            index = 0\r\n            folders = []\r\n            while True:\r\n                try:\r\n                    subkey_name = winreg.EnumKey(key, index)  # \u83b7\u53d6 GUID\r\n                    guid = subkey_name.strip("{}")\r\n\r\n                    # \u83b7\u53d6\u6587\u4ef6\u5939\u540d\u79f0\r\n                    try:\r\n                        with winreg.OpenKey(winreg.HKEY_CLASSES_ROOT, f"CLSID\\\\{{{guid}}}") as clsid_key:\r\n                            name, _ = winreg.QueryValueEx(clsid_key, None)\r\n                    except FileNotFoundError:\r\n                        name = "Unknown"\r\n\r\n                    folders.append((guid, name))\r\n                    index += 1\r\n                except OSError:\r\n                    break\r\n\r\n            if folders:\r\n                print("\ud83d\udcc2 Custom folders in \'This PC\':")\r\n                for guid, name in folders:\r\n                    print(f"  {guid} - {name}")\r\n            else:\r\n                print("\u26a0\ufe0f No custom folders found in \'This PC\'.")\r\n\r\n    except PermissionError:\r\n        print("\u274c Error: This script requires administrator privileges.")\r\n        print("\ud83d\udd39 Try running the script as an administrator.")\r\n    except Exception as e:\r\n        print(f"\u274c An unexpected error occurred: {e}")\r\n\r\ndef delete_registry_key(root, subkey):\r\n    """\u9012\u5f52\u5220\u9664\u6ce8\u518c\u8868\u9879\u53ca\u5176\u6240\u6709\u5b50\u9879"""\r\n    try:\r\n        with winreg.OpenKey(root, subkey, 0, winreg.KEY_ALL_ACCESS) as key:\r\n            while True:\r\n                try:\r\n                    subkey_name = winreg.EnumKey(key, 0)  # \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5b50\u9879\r\n                    delete_registry_key(root, f"{subkey}\\\\{subkey_name}")  # \u9012\u5f52\u5220\u9664\r\n                except OSError:\r\n                    break\r\n        winreg.DeleteKey(root, subkey)\r\n        print(f"\ud83d\uddd1\ufe0f Successfully deleted: {subkey}")\r\n    except FileNotFoundError:\r\n        print(f"\u26a0\ufe0f Not found: {subkey}")\r\n    except PermissionError:\r\n        print(f"\u274c Permission Denied: {subkey}. Run script as administrator.")\r\n\r\ndef remove_folder(guid):\r\n    """\u5220\u9664 \'\u6b64\u7535\u8111\' \u91cc\u7684\u81ea\u5b9a\u4e49\u6587\u4ef6\u5939"""\r\n    try:\r\n        guid = guid.strip("{}")\r\n\r\n        # 1\ufe0f\u20e3 \u5220\u9664 `NameSpace` \u4e0b\u7684 GUID\r\n        namespace_key = f"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\MyComputer\\\\NameSpace\\\\{{{guid}}}"\r\n        delete_registry_key(winreg.HKEY_LOCAL_MACHINE, namespace_key)\r\n\r\n        # 2\ufe0f\u20e3 \u5220\u9664 `CLSID` - **\u5fc5\u987b\u9012\u5f52\u5220\u9664\u6240\u6709\u5b50\u9879**\r\n        clsid_key_path = f"SOFTWARE\\\\Classes\\\\CLSID\\\\{{{guid}}}"\r\n        delete_registry_key(winreg.HKEY_LOCAL_MACHINE, clsid_key_path)\r\n\r\n        print(f"\u2705 Successfully removed folder with GUID: {guid}")\r\n\r\n    except PermissionError:\r\n        print("\u274c Error: This script requires administrator privileges.")\r\n        print("\ud83d\udd39 Try running the script as an administrator.")\r\n    except Exception as e:\r\n        print(f"\u274c An unexpected error occurred: {e}")\r\n\r\nif __name__ == "__main__":\r\n    parser = argparse.ArgumentParser(\r\n        description="Manage custom folders in \'This PC\' on Windows.",\r\n        epilog="Examples:\\n"\r\n               "  python thispc_folder_manager.py add \'MyFolder\' \'D:\\\\MyFolder\' 112\\n"\r\n               "  python thispc_folder_manager.py list\\n"\r\n               "  python thispc_folder_manager.py remove <GUID>\\n",\r\n        formatter_class=argparse.RawTextHelpFormatter\r\n    )\r\n\r\n    subparsers = parser.add_subparsers(dest="command")\r\n\r\n    # \u6dfb\u52a0\u6587\u4ef6\u5939\r\n    add_parser = subparsers.add_parser("add", help="Add a custom folder to \'This PC\'")\r\n    add_parser.add_argument("name", type=str, help="Custom folder display name")\r\n    add_parser.add_argument("path", type=str, help="Custom folder target path")\r\n    add_parser.add_argument("icon_index", type=int, nargs="?", default=112, help="Icon index (Default: 112 for Documents)")\r\n\r\n    # **\u4fee\u6b63\uff1a\u6dfb\u52a0 list \u547d\u4ee4**\r\n    list_parser = subparsers.add_parser("list", help="List all custom folders in \'This PC\'")\r\n\r\n    # **\u4fee\u6b63\uff1a\u6dfb\u52a0 remove \u547d\u4ee4**\r\n    remove_parser = subparsers.add_parser("remove", help="Remove a custom folder by its GUID")\r\n    remove_parser.add_argument("guid", type=str, help="GUID of the folder to remove")\r\n\r\n    args = parser.parse_args()\r\n\r\n    if args.command == "add":\r\n        add_folder(args.name, args.path, args.icon_index)\r\n    elif args.command == "list":\r\n        list_folders()\r\n    elif args.command == "remove":\r\n        remove_folder(args.guid)\r\n    else:\r\n        parser.print_help()\n'})})]})}function u(r={}){const{wrapper:e}={...(0,s.R)(),...r.components};return e?(0,t.jsx)(e,{...r,children:(0,t.jsx)(l,{...r})}):l(r)}},8453:(r,e,n)=>{n.d(e,{R:()=>o,x:()=>a});var i=n(6540);const t={},s=i.createContext(t);function o(r){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function a(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(t):r.components||t:o(r.components),i.createElement(s.Provider,{value:e},r.children)}}}]);