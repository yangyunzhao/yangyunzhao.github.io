"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7881],{9577:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>a,frontMatter:()=>t,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5\u6570\u636e\u7ed3\u6784/\u9ad8\u6548\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u7279\u5b9a\u503c","title":"\u9ad8\u6548\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u7279\u5b9a\u503c","description":"\u5728 C++ \u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u5728 std::memchr\uff0c\u751a\u81f3 SIMD \u6307\u4ee4\u96c6\uff08\u5982 AVX2\uff09\u6765\u4f18\u5316\u67e5\u627e\u8fc7\u7a0b\u3002","source":"@site/docs/\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5\u6570\u636e\u7ed3\u6784/\u9ad8\u6548\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u7279\u5b9a\u503c.md","sourceDirName":"\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5\u6570\u636e\u7ed3\u6784","slug":"/\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5\u6570\u636e\u7ed3\u6784/\u9ad8\u6548\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u7279\u5b9a\u503c","permalink":"/docs/\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5\u6570\u636e\u7ed3\u6784/\u9ad8\u6548\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u7279\u5b9a\u503c","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5\u6570\u636e\u7ed3\u6784/\u9ad8\u6548\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u7279\u5b9a\u503c.md","tags":[],"version":"current","frontMatter":{},"sidebar":"computer_fundamentals","previous":{"title":"\u7ea2\u9ed1\u6811","permalink":"/docs/\u8ba1\u7b97\u673a\u57fa\u7840/\u7b97\u6cd5\u6570\u636e\u7ed3\u6784/\u7ea2\u9ed1\u6811"},"next":{"title":"\u65f6\u95f4\u5c40\u90e8\u6027\u4e0e\u7a7a\u95f4\u5c40\u90e8\u6027","permalink":"/docs/\u8ba1\u7b97\u673a\u57fa\u7840/\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406/\u65f6\u95f4\u5c40\u90e8\u6027\u4e0e\u7a7a\u95f4\u5c40\u90e8\u6027"}}');var d=r(4848),c=r(8453);const t={},i="\u9ad8\u6548\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u7279\u5b9a\u503c",l={},h=[{value:"1. \u4ecb\u7ecd <code>std::memchr</code>",id:"1-\u4ecb\u7ecd-stdmemchr",level:2},{value:"<code>std::memchr</code> \u662f\u4ec0\u4e48\uff1f",id:"stdmemchr-\u662f\u4ec0\u4e48",level:3},{value:"<strong>\u51fd\u6570\u5b9a\u4e49</strong>",id:"\u51fd\u6570\u5b9a\u4e49",level:3},{value:"<strong>\u9002\u7528\u573a\u666f</strong>",id:"\u9002\u7528\u573a\u666f",level:3},{value:"2. \u5728 <code>std::vector&lt;char&gt;</code> \u4e2d\u4f7f\u7528 <code>std::memchr</code>",id:"2-\u5728-stdvectorchar-\u4e2d\u4f7f\u7528-stdmemchr",level:2},{value:"3. <code>std::memchr</code> vs <code>std::find_if</code> vs <code>for</code> vs SIMD",id:"3-stdmemchr-vs-stdfind_if-vs-for-vs-simd",level:2},{value:"<strong>\u4ee3\u7801\u5b9e\u73b0</strong>",id:"\u4ee3\u7801\u5b9e\u73b0",level:3},{value:"<strong>\u65b9\u6cd5 1\uff1a\u4f20\u7edf <code>for</code> \u5faa\u73af</strong>",id:"\u65b9\u6cd5-1\u4f20\u7edf-for-\u5faa\u73af",level:4},{value:"<strong>\u65b9\u6cd5 2\uff1a<code>std::find_if</code></strong>",id:"\u65b9\u6cd5-2stdfind_if",level:4},{value:"<strong>\u65b9\u6cd5 3\uff1a<code>std::memchr</code></strong>",id:"\u65b9\u6cd5-3stdmemchr",level:4},{value:"<strong>\u65b9\u6cd5 4\uff1aSIMD (AVX2)</strong>",id:"\u65b9\u6cd5-4simd-avx2",level:4},{value:"4. <strong>\u6027\u80fd\u6d4b\u8bd5</strong>",id:"4-\u6027\u80fd\u6d4b\u8bd5",level:2},{value:"<strong>\u6d4b\u8bd5\u65b9\u6cd5</strong>",id:"\u6d4b\u8bd5\u65b9\u6cd5",level:3},{value:"<strong>\u6d4b\u8bd5\u7ed3\u679c</strong>",id:"\u6d4b\u8bd5\u7ed3\u679c",level:3},{value:"5. <strong>\u7ed3\u8bba</strong>",id:"5-\u7ed3\u8bba",level:2}];function o(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"\u9ad8\u6548\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u7279\u5b9a\u503c",children:"\u9ad8\u6548\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u7279\u5b9a\u503c"})}),"\n",(0,d.jsxs)(n.p,{children:["\u5728 C++ \u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u5728 ",(0,d.jsx)(n.code,{children:"std::vector<char>"})," \u6216 ",(0,d.jsx)(n.code,{children:"char[]"})," \u4e2d\u67e5\u627e\u7279\u5b9a\u503c\uff08\u4f8b\u5982 ",(0,d.jsx)(n.code,{children:"1"}),"\uff09\uff0c\u4ee5\u786e\u5b9a\u6570\u636e\u7684\u6709\u6548\u90e8\u5206\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,d.jsx)(n.code,{children:"for"})," \u5faa\u73af\u3001",(0,d.jsx)(n.code,{children:"std::find_if"}),"\u3001",(0,d.jsx)(n.code,{children:"std::memchr"}),"\uff0c\u751a\u81f3 SIMD \u6307\u4ee4\u96c6\uff08\u5982 AVX2\uff09\u6765\u4f18\u5316\u67e5\u627e\u8fc7\u7a0b\u3002"]}),"\n",(0,d.jsxs)(n.p,{children:["\u672c\u6587\u5c06\u8be6\u7ec6\u5206\u6790 ",(0,d.jsx)(n.strong,{children:"\u4e0d\u540c\u65b9\u6cd5\u7684\u7406\u8bba\u6027\u80fd\u3001\u9002\u7528\u573a\u666f\u3001\u4ee3\u7801\u793a\u4f8b"}),"\uff0c\u5e76\u63d0\u4f9b ",(0,d.jsx)(n.strong,{children:"\u5b9e\u9645\u6d4b\u8bd5\u6570\u636e"})," \u4f9b\u53c2\u8003\u3002"]}),"\n",(0,d.jsxs)(n.h2,{id:"1-\u4ecb\u7ecd-stdmemchr",children:["1. \u4ecb\u7ecd ",(0,d.jsx)(n.code,{children:"std::memchr"})]}),"\n",(0,d.jsxs)(n.h3,{id:"stdmemchr-\u662f\u4ec0\u4e48",children:[(0,d.jsx)(n.code,{children:"std::memchr"})," \u662f\u4ec0\u4e48\uff1f"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"std::memchr"})," \u662f C \u8bed\u8a00\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u4e13\u95e8\u7528\u4e8e\u5728 ",(0,d.jsx)(n.strong,{children:"\u8fde\u7eed\u7684\u5185\u5b58\u5757"}),"\uff08\u5982 ",(0,d.jsx)(n.code,{children:"char[]"})," \u6216 ",(0,d.jsx)(n.code,{children:"std::vector<char>"}),"\uff09\u4e2d\u67e5\u627e ",(0,d.jsx)(n.strong,{children:"\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5b57\u8282"}),"\u3002"]}),"\n",(0,d.jsx)(n.h3,{id:"\u51fd\u6570\u5b9a\u4e49",children:(0,d.jsx)(n.strong,{children:"\u51fd\u6570\u5b9a\u4e49"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-cpp",children:"void* memchr(const void* ptr, int value, size_t num);\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"\u53c2\u6570\uff1a"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"ptr"}),"\uff1a\u6307\u5411\u8981\u641c\u7d22\u7684\u5185\u5b58\u5757\u7684\u6307\u9488\uff08\u901a\u5e38\u662f ",(0,d.jsx)(n.code,{children:"char*"})," \u6216 ",(0,d.jsx)(n.code,{children:"void*"}),"\uff09\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"value"}),"\uff1a\u8981\u67e5\u627e\u7684\u5b57\u8282\u503c\uff08\u4f1a\u8f6c\u6362\u4e3a ",(0,d.jsx)(n.code,{children:"unsigned char"}),"\uff09\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"num"}),"\uff1a\u8981\u641c\u7d22\u7684 ",(0,d.jsx)(n.strong,{children:"\u5b57\u8282\u6570"}),"\uff08",(0,d.jsx)(n.code,{children:"size_t"}),"\uff09\u3002"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"\u8fd4\u56de\u503c\uff1a"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsxs)(n.strong,{children:["\u5982\u679c\u627e\u5230 ",(0,d.jsx)(n.code,{children:"value"})]}),"\uff0c\u8fd4\u56de\u6307\u5411\u8be5\u5b57\u8282\u7684\u6307\u9488\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"\u5982\u679c\u672a\u627e\u5230"}),"\uff0c\u8fd4\u56de ",(0,d.jsx)(n.code,{children:"nullptr"}),"\u3002"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"\u9002\u7528\u573a\u666f",children:(0,d.jsx)(n.strong,{children:"\u9002\u7528\u573a\u666f"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"std::memchr"})," ",(0,d.jsxs)(n.strong,{children:["\u901a\u5e38\u6bd4 ",(0,d.jsx)(n.code,{children:"for"})," \u5faa\u73af\u5feb"]}),"\uff0c\u56e0\u4e3a\u5b83\u7684\u5e95\u5c42\u5b9e\u73b0\u53ef\u80fd\u5229\u7528\u4e86 ",(0,d.jsx)(n.strong,{children:"SIMD\uff08Single Instruction Multiple Data\uff09\u52a0\u901f"}),"\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:["\u9002\u7528\u4e8e ",(0,d.jsx)(n.strong,{children:"\u4e8c\u8fdb\u5236\u6570\u636e"})," \u5904\u7406\uff0c\u4f8b\u5982 ",(0,d.jsx)(n.code,{children:"char[]"}),"\u3001",(0,d.jsx)(n.code,{children:"std::vector<char>"}),"\u3002"]}),"\n"]}),"\n",(0,d.jsxs)(n.h2,{id:"2-\u5728-stdvectorchar-\u4e2d\u4f7f\u7528-stdmemchr",children:["2. \u5728 ",(0,d.jsx)(n.code,{children:"std::vector<char>"})," \u4e2d\u4f7f\u7528 ",(0,d.jsx)(n.code,{children:"std::memchr"})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsxs)(n.strong,{children:["\u793a\u4f8b\uff1a\u5728 ",(0,d.jsx)(n.code,{children:"std::vector<char>"})," \u4e2d\u67e5\u627e ",(0,d.jsx)(n.code,{children:"1"})]})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\n#include <vector>\r\n#include <cstring>  // std::memchr\r\n\r\nint main() {\r\n    std::vector<char> data(10, 0); // \u521d\u59cb\u5316 10 \u4e2a 0\r\n    data[3] = 1; // \u8bbe\u7f6e\u7d22\u5f15 3 \u548c 7 \u4e3a 1\r\n    data[7] = 1;\r\n\r\n    void* result = std::memchr(data.data(), 1, data.size());\r\n\r\n    if (result) {\r\n        int index = static_cast<char*>(result) - data.data();\r\n        std::cout << "Found first 1 at index: " << index << std::endl;\r\n    } else {\r\n        std::cout << "Not found!" << std::endl;\r\n    }\r\n    return 0;\r\n}\n'})}),"\n",(0,d.jsxs)(n.h2,{id:"3-stdmemchr-vs-stdfind_if-vs-for-vs-simd",children:["3. ",(0,d.jsx)(n.code,{children:"std::memchr"})," vs ",(0,d.jsx)(n.code,{children:"std::find_if"})," vs ",(0,d.jsx)(n.code,{children:"for"})," vs SIMD"]}),"\n",(0,d.jsx)(n.h3,{id:"\u4ee3\u7801\u5b9e\u73b0",children:(0,d.jsx)(n.strong,{children:"\u4ee3\u7801\u5b9e\u73b0"})}),"\n",(0,d.jsx)(n.h4,{id:"\u65b9\u6cd5-1\u4f20\u7edf-for-\u5faa\u73af",children:(0,d.jsxs)(n.strong,{children:["\u65b9\u6cd5 1\uff1a\u4f20\u7edf ",(0,d.jsx)(n.code,{children:"for"})," \u5faa\u73af"]})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-cpp",children:"int for_loop_method(const std::vector<char>& data, int start, int end) {\r\n    for (int i = start; i <= end; ++i) {\r\n        if (data[i] != 0) return i;\r\n    }\r\n    return -1;\r\n}\n"})}),"\n",(0,d.jsx)(n.h4,{id:"\u65b9\u6cd5-2stdfind_if",children:(0,d.jsxs)(n.strong,{children:["\u65b9\u6cd5 2\uff1a",(0,d.jsx)(n.code,{children:"std::find_if"})]})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-cpp",children:"#include <algorithm>\r\nint find_if_method(const std::vector<char>& data, int start, int end) {\r\n    auto it = std::find_if(data.begin() + start, data.begin() + end + 1, [](char c) { return c != 0; });\r\n    return (it != data.begin() + end + 1) ? std::distance(data.begin(), it) : -1;\r\n}\n"})}),"\n",(0,d.jsx)(n.h4,{id:"\u65b9\u6cd5-3stdmemchr",children:(0,d.jsxs)(n.strong,{children:["\u65b9\u6cd5 3\uff1a",(0,d.jsx)(n.code,{children:"std::memchr"})]})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-cpp",children:"int memchr_method(const std::vector<char>& data, int start, int end) {\r\n    void* result = std::memchr(data.data() + start, 1, end - start + 1);\r\n    return result ? static_cast<char*>(result) - data.data() : -1;\r\n}\n"})}),"\n",(0,d.jsx)(n.h4,{id:"\u65b9\u6cd5-4simd-avx2",children:(0,d.jsx)(n.strong,{children:"\u65b9\u6cd5 4\uff1aSIMD (AVX2)"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-cpp",children:"#include <immintrin.h>\r\nint simd_method(const std::vector<char>& data, int start, int end) {\r\n    constexpr int SIMD_WIDTH = 32;\r\n    int aligned_start = start;\r\n    while (aligned_start + SIMD_WIDTH <= end) {\r\n        __m256i chunk = _mm256_loadu_si256(reinterpret_cast<const __m256i*>(data.data() + aligned_start));\r\n        int mask = _mm256_movemask_epi8(_mm256_cmpeq_epi8(chunk, _mm256_setzero_si256()));\r\n        if (mask != 0xFFFFFFFF) {\r\n            for (int i = 0; i < SIMD_WIDTH; ++i) {\r\n                if (data[aligned_start + i] != 0) {\r\n                    return aligned_start + i;\r\n                }\r\n            }\r\n        }\r\n        aligned_start += SIMD_WIDTH;\r\n    }\r\n    for (int i = aligned_start; i <= end; ++i) {\r\n        if (data[i] != 0) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\n"})}),"\n",(0,d.jsxs)(n.h2,{id:"4-\u6027\u80fd\u6d4b\u8bd5",children:["4. ",(0,d.jsx)(n.strong,{children:"\u6027\u80fd\u6d4b\u8bd5"})]}),"\n",(0,d.jsx)(n.h3,{id:"\u6d4b\u8bd5\u65b9\u6cd5",children:(0,d.jsx)(n.strong,{children:"\u6d4b\u8bd5\u65b9\u6cd5"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\u751f\u6210 ",(0,d.jsx)(n.code,{children:"std::vector<char>"}),"\uff0c\u5927\u5c0f ",(0,d.jsx)(n.code,{children:"600"}),"\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsxs)(n.strong,{children:["\u968f\u673a\u63d2\u5165 ",(0,d.jsx)(n.code,{children:"1"})," \u7684\u4f4d\u7f6e"]}),"\uff0c\u4fdd\u8bc1\u4e0d\u540c\u65b9\u6cd5\u4f7f\u7528\u76f8\u540c\u6570\u636e\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsxs)(n.strong,{children:["\u968f\u673a\u9009\u62e9 ",(0,d.jsx)(n.code,{children:"start"})," \u548c ",(0,d.jsx)(n.code,{children:"end"})]}),"\uff0c\u6d4b\u8bd5 100,000 \u6b21\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:["\u4f7f\u7528 ",(0,d.jsx)(n.code,{children:"std::chrono"})," \u8bb0\u5f55\u65f6\u95f4\u3002"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:"https://nas.znmlr.cn:15900/markdown/2025/03/13/image-20250313110119943.png",alt:"image-20250313110119943"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:"https://nas.znmlr.cn:15900/markdown/2025/03/13/image-20250313110139614.png",alt:"image-20250313110139614"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:"https://nas.znmlr.cn:15900/markdown/2025/03/13/image-20250313110153543.png",alt:"image-20250313110153543"})}),"\n",(0,d.jsx)(n.h3,{id:"\u6d4b\u8bd5\u7ed3\u679c",children:(0,d.jsx)(n.strong,{children:"\u6d4b\u8bd5\u7ed3\u679c"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"\u65b9\u6cd5"}),(0,d.jsx)(n.th,{children:"\u6267\u884c\u65f6\u95f4\uff08\u79d2\uff09"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"for"})," \u5faa\u73af"]}),(0,d.jsx)(n.td,{children:"2.491s"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"std::find_if"})}),(0,d.jsx)(n.td,{children:"1.585s"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"std::memchr"})}),(0,d.jsx)(n.td,{children:"0.719s"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"SIMD (AVX2)"})}),(0,d.jsx)(n.td,{children:"0.999s"})]})]})]}),"\n",(0,d.jsxs)(n.h2,{id:"5-\u7ed3\u8bba",children:["5. ",(0,d.jsx)(n.strong,{children:"\u7ed3\u8bba"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"for"})," \u5faa\u73af ",(0,d.jsx)(n.strong,{children:"\u6700\u6162"}),"\uff0c\u4e0d\u63a8\u8350\u7528\u4e8e\u5927\u6570\u636e\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"std::find_if"})," ",(0,d.jsx)(n.strong,{children:"\u9002\u7528\u4e8e STL \u5bb9\u5668"}),"\uff0c\u4f46\u6bd4 ",(0,d.jsx)(n.code,{children:"memchr"})," \u7565\u6162\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"std::memchr"})," ",(0,d.jsx)(n.strong,{children:"\u901f\u5ea6\u6700\u5feb"}),"\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"SIMD (AVX2)"})," ",(0,d.jsx)(n.strong,{children:"\u6b21\u5feb"}),"\uff0c\u9002\u7528\u4e8e\u5927\u6570\u636e\u4f18\u5316\u3002"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"\u63a8\u8350\uff1a"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"\u5c0f\u6570\u636e\u91cf"}),"\uff1a",(0,d.jsx)(n.code,{children:"std::find_if"}),"\uff0c\u53ef\u8bfb\u6027\u597d\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"\u4e2d\u7b49\u6570\u636e\u91cf"}),"\uff1a",(0,d.jsx)(n.code,{children:"std::memchr"}),"\uff0c\u901f\u5ea6\u66f4\u5feb\u3002"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"\u5927\u6570\u636e\u91cf"}),"\uff1a",(0,d.jsx)(n.code,{children:"SIMD (AVX2)"}),"\uff0c\u6781\u81f4\u4f18\u5316\u3002"]}),"\n"]}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsx)(n.p,{children:"\u7406\u8bba\u4e0astd::memchr\u4e0eSIMD\u6570\u636e\u5e94\u8be5\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u53ef\u80fd\u662f\u89c4\u6a21\u8f83\u5c0f\u6ca1\u6709\u4f53\u73b0SIMD\u7684\u4f18\u52bf"}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>i});var s=r(6540);const d={},c=s.createContext(d);function t(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);